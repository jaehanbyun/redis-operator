{{- if .Values.prometheus.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-prometheus
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-prometheus
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-prometheus
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-prometheus
    spec:
      serviceAccountName: {{ .Release.Name }}-service-account
      containers:
      - name: prometheus
        image: quay.io/prometheus/prometheus:v2.45.0
        args:
        - "--config.file=/etc/prometheus/prometheus.yml"
        - "--storage.tsdb.path=/prometheus"
        - "--web.console.libraries=/etc/prometheus/console_libraries"
        - "--web.console.templates=/etc/prometheus/consoles"
        - "--web.enable-lifecycle"
        - "--web.enable-admin-api"
        ports:
        - name: web
          containerPort: 9090
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
        - name: rules-volume
          mountPath: /etc/prometheus/rules
        - name: storage-volume
          mountPath: /prometheus
      volumes:
      - name: config-volume
        configMap:
          name: {{ .Release.Name }}-prometheus-config
      - name: rules-volume
        configMap:
          name: redis-cluster-alerts
      - name: storage-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-prometheus
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-prometheus
    release: {{ .Release.Name }}
spec:
  ports:
  - name: web
    port: 9090
    targetPort: web
  selector:
    app: {{ .Release.Name }}-prometheus
{{- end }} 